# Makefile for CommunaApp Backend
# –ù–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º

.PHONY: help install dev prod test clean lint format

# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
help:
	@echo "CommunaApp Backend - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "  make install    - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "  make dev        - –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make prod       - –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ"
	@echo "  make test       - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  make lint       - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏"
	@echo "  make format     - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
	@echo "  make clean      - –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
	@echo "  make db-init    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
	@echo "  make db-migrate - –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"
	@echo "  make db-upgrade - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"
	@echo "  make logs       - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo ""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip install --upgrade pip
	pip install -r requirements.txt
	pip install -r requirements-dev.txt
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f docker-compose.dev.yml up --build

# –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-d:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ (—Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)..."
	docker-compose -f docker-compose.dev.yml up -d --build

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ dev —Å—Ä–µ–¥—ã
dev-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ dev —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml down

# –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ
prod:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ..."
	docker-compose up -d --build

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ prod —Å—Ä–µ–¥—ã
prod-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ prod —Å—Ä–µ–¥—ã..."
	docker-compose down

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	pytest tests/ -v --cov=src --cov-report=html

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	flake8 src/ tests/
	mypy src/
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
format:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	black src/ tests/
	isort src/ tests/
	@echo "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	find . -type d -name ".pytest_cache" -exec rm -rf {} +
	find . -type d -name ".mypy_cache" -exec rm -rf {} +
	rm -rf htmlcov/
	rm -rf .coverage
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-init:
	@echo "üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	python -c "from src.database import init_database; import asyncio; asyncio.run(init_database())"
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
db-migrate:
	@echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: " desc; \
	alembic revision --autogenerate -m "$$desc"
	@echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
db-upgrade:
	@echo "‚¨ÜÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	alembic upgrade head
	@echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

# –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π
db-downgrade:
	@echo "‚¨áÔ∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π..."
	@read -p "–ù–∞ —Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ –æ—Ç–∫–∞—Ç–∏—Ç—å? " steps; \
	alembic downgrade -$$steps
	@echo "‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
logs:
	@echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤..."
	docker-compose logs -f backend

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ dev —Å—Ä–µ–¥—ã
logs-dev:
	@echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (dev)..."
	docker-compose -f docker-compose.dev.yml logs -f backend

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É backend
shell:
	@echo "üíª –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	docker-compose exec backend bash

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
shell-dev:
	@echo "üíª –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ backend dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	docker-compose -f docker-compose.dev.yml exec backend bash

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db-shell:
	@echo "üíæ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose exec postgres psql -U postgres -d communaapp

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ dev –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db-shell-dev:
	@echo "üíæ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ dev –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose -f docker-compose.dev.yml exec postgres psql -U postgres -d communaapp_dev

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î
db-backup:
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
	@timestamp=$$(date +%Y%m%d_%H%M%S); \
	docker-compose exec postgres pg_dump -U postgres communaapp > database/backups/backup_$$timestamp.sql
	@echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
db-restore:
	@echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
	@ls database/backups/
	@read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: " filename; \
	docker-compose exec -T postgres psql -U postgres communaapp < database/backups/$$filename
	@echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ dev —Å—Ä–µ–¥—ã
dev-reset:
	@echo "üîÑ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ dev —Å—Ä–µ–¥—ã..."
	docker-compose -f docker-compose.dev.yml down -v
	docker-compose -f docker-compose.dev.yml up --build -d
	@echo "‚úÖ Dev —Å—Ä–µ–¥–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤
monitor:
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤..."
	docker stats

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
status:
	@echo "üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose ps

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
update-deps:
	@echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip-compile requirements.in
	pip-compile requirements-dev.in
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
docs:
	@echo "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	mkdocs build
	@echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞"

# –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
docs-serve:
	@echo "üìö –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	mkdocs serve

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
security-check:
	@echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
	safety check
	bandit -r src/
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –≤–∞—à Makefile

# ========================================
# TELEGRAM BOT –£–ü–†–ê–í–õ–ï–ù–ò–ï
# ========================================

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ —É @BotFather
create-bot:
	@echo "ü§ñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é Telegram –±–æ—Ç–∞:"
	@echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ @BotFather"
	@echo "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot"
	@echo "3. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Communa Validator Bot)"
	@echo "4. –í–≤–µ–¥–∏—Ç–µ username –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: communa_validator_bot)"
	@echo "5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:"
	@echo "   TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å"
	@echo "6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make setup-bot"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ bot —Å–µ—Ä–≤–∏—Å–∞
setup-bot:
	@echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram bot —Å–µ—Ä–≤–∏—Å–∞..."
	@mkdir -p bot/src
	@cp .env.example bot/.env.example 2>/dev/null || echo "–°–æ–∑–¥–∞–π—Ç–µ bot/.env.example"
	@echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ bot —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–∑–¥–∞–Ω–∞"
	@echo "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª!"

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ bot —Å–µ—Ä–≤–∏—Å–∞
start-bot:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ Telegram bot..."
	@docker-compose up bot -d
	@echo "‚úÖ Bot –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ bot —Å–µ—Ä–≤–∏—Å–∞
stop-bot:
	@echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram bot..."
	@docker-compose stop bot
	@echo "‚úÖ Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ bot —Å–µ—Ä–≤–∏—Å–∞
restart-bot:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram bot..."
	@docker-compose restart bot
	@echo "‚úÖ Bot –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"

# –õ–æ–≥–∏ bot —Å–µ—Ä–≤–∏—Å–∞
logs-bot:
	@echo "üìä –õ–æ–≥–∏ Telegram bot:"
	@docker-compose logs -f bot

# –õ–æ–≥–∏ bot –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫
logs-bot-tail:
	@echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Telegram bot:"
	@docker-compose logs --tail=50 bot

# –°—Ç–∞—Ç—É—Å bot —Å–µ—Ä–≤–∏—Å–∞
status-bot:
	@echo "üìà –°—Ç–∞—Ç—É—Å Telegram bot:"
	@docker-compose ps bot

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É bot
shell-bot:
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É bot..."
	@docker-compose exec bot /bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ bot API
test-bot-api:
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram Bot API..."
	@curl -X GET "http://localhost:8000/api/v1/telegram/bot-status" \
		-H "Authorization: Bearer your_token_here" \
		-H "Content-Type: application/json" \
		-w "\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: %{http_code}\n" \
		-s -S || echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ bot
test-bot-validate:
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram Bot..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ Telegram ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: " telegram_id; \
	curl -X POST "http://localhost:8000/api/v1/telegram/validate" \
		-H "Authorization: Bearer your_token_here" \
		-H "Content-Type: application/json" \
		-d '{"telegram_id": "'$telegram_id'", "request_confirmation": false}' \
		-w "\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: %{http_code}\n" \
		-s -S | jq '.' || echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"

# –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å bot
dev-with-bot:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å Telegram Bot..."
	@docker-compose -f docker-compose.dev.yml up backend bot database -d
	@echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞:"
	@echo "  üîó Backend: http://localhost:8000"
	@echo "  üîó API Docs: http://localhost:8000/docs"
	@echo "  ü§ñ Telegram Bot: –∞–∫—Ç–∏–≤–µ–Ω"
	@echo "  üìä –õ–æ–≥–∏: make logs-bot"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ bot
check-bot-config:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram Bot..."
	@if [ -f .env ]; then \
		if grep -q "TELEGRAM_BOT_TOKEN=" .env; then \
			echo "‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞–π–¥–µ–Ω –≤ .env"; \
		else \
			echo "‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env"; \
			echo "üí° –î–æ–±–∞–≤—å—Ç–µ: TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω"; \
		fi; \
	else \
		echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
		echo "üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example"; \
	fi
	@if [ -d bot/ ]; then \
		echo "‚úÖ –ü–∞–ø–∫–∞ bot/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	else \
		echo "‚ùå –ü–∞–ø–∫–∞ bot/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; \
		echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make setup-bot"; \
	fi

# –û—á–∏—Å—Ç–∫–∞ bot –¥–∞–Ω–Ω—ã—Ö
clean-bot:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö Telegram Bot..."
	@docker-compose down bot
	@docker-compose rm -f bot
	@echo "‚úÖ –î–∞–Ω–Ω—ã–µ bot –æ—á–∏—â–µ–Ω—ã"

# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ bot
reinstall-bot: clean-bot setup-bot start-bot
	@echo "üîÑ Bot –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ bot –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
monitor-bot:
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Telegram Bot –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
	@echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
	@while true; do \
		clear; \
		echo "ü§ñ TELEGRAM BOT MONITOR - $(date)"; \
		echo "=========================================="; \
		docker-compose ps bot; \
		echo ""; \
		echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"; \
		docker-compose logs --tail=10 bot; \
		echo ""; \
		echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."; \
		sleep 5; \
	done

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ bot
send-test-message:
	@echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram Bot..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è: " telegram_id; \
	read -p "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " message; \
	curl -X POST "http://localhost:8000/api/v1/telegram/send-message/$telegram_id" \
		-H "Authorization: Bearer your_token_here" \
		-H "Content-Type: application/json" \
		-d '{"message": "'$message'"}' \
		-w "\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: %{http_code}\n" \
		-s -S | jq '.' || echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"

# ========================================
# –ö–û–ú–ü–õ–ï–ö–°–ù–´–ï –ö–û–ú–ê–ù–î–´
# ========================================

# –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å bot
full-setup: setup-bot check-bot-config
	@echo "üéØ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å Telegram Bot –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo ""
	@echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
	@echo "1. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª"
	@echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make dev-with-bot"
	@echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: make test-bot-validate"
	@echo "4. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: make monitor-bot"

# –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
diagnose:
	@echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
	@echo "=========================="
	@echo ""
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@docker-compose ps
	@echo ""
	@echo "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è bot:"
	@make check-bot-config
	@echo ""
	@echo "üåê –¢–µ—Å—Ç API:"
	@curl -X GET "http://localhost:8000/health" -w " (–°—Ç–∞—Ç—É—Å: %{http_code})\n" -s -S 2>/dev/null || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo ""
	@echo "ü§ñ –°—Ç–∞—Ç—É—Å Telegram Bot:"
	@curl -X GET "http://localhost:8000/api/v1/telegram/bot-status" -H "Authorization: Bearer test" -w " (–°—Ç–∞—Ç—É—Å: %{http_code})\n" -s -S 2>/dev/null || echo "‚ùå Bot API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü–æ–º–æ—â—å –ø–æ bot –∫–æ–º–∞–Ω–¥–∞–º
help-bot:
	@echo "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Telegram Bot:"
	@echo "======================================"
	@echo ""
	@echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞:"
	@echo "  make create-bot          - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞"
	@echo "  make setup-bot           - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make check-bot-config    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
	@echo ""
	@echo "üöÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
	@echo "  make start-bot           - –ó–∞–ø—É—Å–∫ bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make stop-bot            - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make restart-bot         - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make dev-with-bot        - –ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã —Å bot"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  make test-bot-api        - –¢–µ—Å—Ç bot API"
	@echo "  make test-bot-validate   - –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ bot"
	@echo "  make send-test-message   - –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
	@echo ""
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
	@echo "  make logs-bot            - –õ–æ–≥–∏ bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make status-bot          - –°—Ç–∞—Ç—É—Å bot —Å–µ—Ä–≤–∏—Å–∞"
	@echo "  make monitor-bot         - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
	@echo ""
	@echo "üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:"
	@echo "  make clean-bot           - –û—á–∏—Å—Ç–∫–∞ bot –¥–∞–Ω–Ω—ã—Ö"
	@echo "  make reinstall-bot       - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞"
	@echo "  make diagnose            - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"