version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: communaapp_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-communaapp}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    networks:
      - communaapp_network

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: communaapp_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - communaapp_network

  # Backend API сервер
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      no_cache: true
    container_name: communaapp_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-communaapp}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - communaapp_network

  # Frontend Next.js приложение
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      no_cache: true
    container_name: communaapp_frontend
    environment:
      - NEXT_PUBLIC_API_URL=https://n8n-karpix-communa.g44y6r.easypanel.host/api
      - NEXT_PUBLIC_APP_NAME=Kommuna
    depends_on:
      - backend
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - communaapp_network

  # Telegram Bot
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
      no_cache: true
    container_name: communaapp_bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - API_URL=http://backend:8000
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-communaapp}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - WEBHOOK_URL=${WEBHOOK_URL}
    depends_on:
      - postgres
      - backend
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - communaapp_network

  # Nginx прокси сервер
  nginx:
    image: nginx:alpine
    container_name: communaapp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - backend
      - frontend
    networks:
      - communaapp_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  communaapp_network:
    driver: bridge