# docker-compose.dev.yml - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

services:
  # Backend API —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    # –£–ë–†–ê–õ–ò container_name —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    ports:
      - "8001:8000"  # –ò–ó–ú–ï–ù–ò–õ–ò –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è dev
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
      - DB_HOST=postgres
      - DB_NAME=kommuna
      - DB_USER=owner
      - DB_PASSWORD=Gfhjkm123.
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=fa11c75be6628d29470f634f78898ebe5672e642766311f5cc3b49698b1eea8f4ff6891486bf61ad006fd03dec7bb255ca9c92958eeddaa2a7f022306def5591
      - ENCRYPTION_KEY=6c193a5c8ae272bc707b0999633a14d2
      - TELEGRAM_WEBHOOK_DOMAIN=https://localhost
      - TELEGRAM_WEBHOOK_SECRET=dev-webhook-secret
      - TELEGRAM_MAIN_BOT_TOKEN=${TELEGRAM_MAIN_BOT_TOKEN}
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=52428800
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/src:/app/src
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - communaapp_dev_network
    restart: unless-stopped

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3001:3000"  # –ò–ó–ú–ï–ù–ò–õ–ò –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è dev
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:8001  # –û–ë–ù–û–í–ò–õ–ò —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤—ã–π –ø–æ—Ä—Ç backend
      - INTERNAL_API_URL=http://backend:8000
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      - NPM_FLAGS=--legacy-peer-deps --no-audit --no-fund
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    command: >
      sh -lc "set -e;
      if [ -f pnpm-lock.yaml ]; then corepack enable && pnpm install;
      elif [ -f yarn.lock ]; then yarn install;
      elif [ -f package-lock.json ]; then npm ci $NPM_FLAGS;
      else npm install $NPM_FLAGS;
      fi;
      npx next dev -H 0.0.0.0 -p 3000"
    networks:
      - communaapp_dev_network
    restart: unless-stopped
    tty: true
    stdin_open: true

  # ü§ñ TELEGRAM BOT –°–ï–†–í–ò–°
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile.dev
    # –£–ë–†–ê–õ–ò container_name —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    environment:
      - TELEGRAM_MAIN_BOT_TOKEN=${TELEGRAM_MAIN_BOT_TOKEN}
      - BACKEND_URL=http://backend:8000
      - LOG_LEVEL=INFO
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./bot/src:/app/src
    networks:
      - communaapp_dev_network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    # –£–ë–†–ê–õ–ò container_name —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    restart: unless-stopped
    environment:
      - POSTGRES_DB=kommuna
      - POSTGRES_USER=owner
      - POSTGRES_PASSWORD=Gfhjkm123.
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"  # –ò–ó–ú–ï–ù–ò–õ–ò –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è dev
    networks:
      - communaapp_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U owner -d kommuna"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    # –£–ë–†–ê–õ–ò container_name —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    restart: unless-stopped
    ports:
      - "6380:6379"  # –ò–ó–ú–ï–ù–ò–õ–ò –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è dev
    networks:
      - communaapp_dev_network

  # Adminer
  adminer:
    image: adminer
    # –£–ë–†–ê–õ–ò container_name —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=lucas
    depends_on:
      - postgres
    networks:
      - communaapp_dev_network

volumes:
  postgres_dev_data:
    driver: local
  frontend_node_modules:

networks:
  communaapp_dev_network:
    driver: bridge
